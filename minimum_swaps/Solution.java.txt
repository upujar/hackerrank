import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the minimumSwaps function below.
    static int minimumSwaps(int[] arr) {
  List<Integer> sorted = new ArrayList<Integer>();
    int swaps = 0;
    boolean[] visited = new boolean[arr.length];
    for (int i = 0; i < arr.length; i++) {
      sorted.add(arr[i]);
      visited[i] = false;
    }
    Collections.sort(sorted);
    for (int i = 0; i < arr.length; i++) {
      if (visited[i]) {
        continue;
      }
      if (arr[i] == sorted.get(i)) {
        visited[i] = true;
        continue;
      }
      int temp = i;
      int localCount = 0;
      while (!visited[temp]) {
        visited[temp]=true;
        temp = linearSearch(arr, sorted.get(temp));
        localCount++;
      }
      swaps += localCount - 1;
    }

    return swaps;
  }

  static int linearSearch(int[] arr, int number) {
    for(int i=0;i<arr.length;i++)
      if(arr[i]==number)
        return i;
    return -1;
  }


    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] arr = new int[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }

        int res = minimumSwaps(arr);

        bufferedWriter.write(String.valueOf(res));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
